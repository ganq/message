<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN"
        "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="com.mysoft.b2b.bizsupport.mapper.SMSMapper">
	
	<insert id="insertSMSJob" parameterType="com.mysoft.b2b.bizsupport.api.sms.SMSJob">
		insert into b2b_support.bizp_sms_job(
			sms_job_id,
			message_batch,
			message_type_code,
			title,
			content,
			attachments,
			sender,
			sender_id,
			receiver,
			status,
			sms_id,
			call_in,
			remark,
			try_times,
			created_time,
			last_sent_time
		)
		values(
			#{smsJobId},
			#{messageBatch},
			#{messageTypeCode},
			#{title},
			#{content},
			#{attachments},
			#{sender},
			#{senderId},
			#{receiver},
			#{status},
			#{smsId},
			#{callIn},
			#{remark},
			#{tryTimes},
			#{createdTime},
			#{lastSentTime}
		)
	</insert>
	
	<update id="updateSMSJob" parameterType="com.mysoft.b2b.bizsupport.api.sms.SMSJob">
		update b2b_support.bizp_sms_job set
			sms_job_id =#{smsJobId},
			message_batch =#{messageBatch},
			message_type_code =#{messageTypeCode},
			title=#{title},
			content=#{content},
			attachments=#{attachments},
			sender=#{sender},
			sender_id=#{senderId},
			receiver=#{receiver},
			status=#{status},
			sms_id=#{smsId},
			call_in=#{callIn},
			remark=#{remark},
			try_times=#{tryTimes},
			created_time=#{createdTime},
			last_sent_time=#{lastSentTime}
		<where>
			<if test="smsJobId !='' and smsJobId !=null">
				and sms_job_id =#{smsJobId}
			</if>
			<if test="smsId !='' and smsId !=null">
				and sms_id =#{smsId}
			</if>
		</where>
	</update>
	
	<delete id="deleteSMSJob" parameterType="java.lang.String">
		delete from b2b_support.bizp_sms_job where sms_job_id =#{0}
	</delete>
	
	<select id="getSMSJob" parameterType="java.lang.String"  resultType="com.mysoft.b2b.bizsupport.api.sms.SMSJob">
		select 
			sms_job_id as smsJobId,
			message_batch as messageBatch,
			message_type_code as messageTypeCode,
			title,
			content,
			attachments,
			sender,
			sender_id as senderId,
			receiver,
			status,
			sms_id as smsId,
			call_in as callIn,
			remark,
			try_times as tryTimes,
			created_time as createdTime,
			last_sent_time as lastSentTime
		from b2b_support.bizp_sms_job
		where sms_job_id=#{0}
	</select>
	
	<select id="getSchedulerSMSJobList" resultType="com.mysoft.b2b.bizsupport.api.sms.SMSJob" 
		parameterType="com.mysoft.b2b.bizsupport.api.sms.SMSJobCriteria">
		select 
			sms_job_id as smsJobId,
			message_batch as messageBatch,
			message_type_code as messageTypeCode,
			title,
			content,
			attachments,
			sender,
			sender_id as senderId,
			receiver,
			status,
			sms_id as smsId,
			call_in as callIn,
			remark,
			try_times as tryTimes,
			created_time as createdTime,
			last_sent_time as lastSentTime
		from b2b_support.bizp_sms_job
		where
			(status=1 and last_sent_time is null) 
		 or (status=1 and last_sent_time is not null and try_times &lt; #{tryTimes} )
  		 or ( (status=2 or status=4) and try_times &lt; #{tryTimes} and #{lastSentTime} &gt; last_sent_time )
		limit #{offset},#{pageSize}
	</select>
	
	<select id="getSMSJobList" resultType="com.mysoft.b2b.bizsupport.api.sms.SMSJob" parameterType="com.mysoft.b2b.bizsupport.api.sms.SMSJobCriteria">
		select 
			sms_job_id as smsJobId,
			message_batch as messageBatch,
			message_type_code as messageTypeCode,
			title,
			content,
			attachments,
			sender,
			sender_id as senderId,
			receiver,
			status,
			sms_id as smsId,
			call_in as callIn,
			remark,
			try_times as tryTimes,
			created_time as createdTime,
			last_sent_time as lastSentTime
		from b2b_support.bizp_sms_job
		<where>
			<if test="messageTypeCode != null and messageTypeCode != '' ">
			 AND  message_type_code = #{messageTypeCode}
			</if>
			<if test="messageBatch != null and messageBatch != '' ">
			 AND  message_batch = #{messageBatch}
			</if>
			<if test="title !='' and title !=null">
				and title like '%${title}%'
			</if>
			<if test="content !='' and content !=null">
				and content like '%${content}%'
			</if>
			<if test="sender !='' and sender !=null">
				and sender = #{sender}
			</if>
			<if test="senderId !='' and senderId !=null">
				and sender_id = #{senderId}
			</if>
			<if test="receiver !='' and receiver !=null">
				and  receiver like '%${receiver}%'
			</if>
			<if test="tryTimes != 0">
				and try_times &lt; #{tryTimes}
			</if>
			<if test="lastSentTime !='' and lastSentTime !=null">
				and (last_sent_time is null or last_sent_time &lt; #{lastSentTime})
			</if>
			<if test="statuss !=null and statuss.size()>0">
				and status in 
			<foreach collection="statuss" item="item" open="(" separator="," close=")">
				#{item}
			</foreach>
			</if>
		</where>
		limit #{offset},#{pageSize}
	</select>
	
	<select id="getSMSJobTotal" resultType="java.lang.Integer">
		select 
			count(1)
		from b2b_support.bizp_sms_job
		<where>
			<if test="messageTypeCode != null and messageTypeCode != '' ">
			 AND  message_type_code = #{messageTypeCode}
			</if>
			<if test="messageBatch != null and messageBatch != '' ">
			 AND  message_batch = #{messageBatch}
			</if>
			<if test="title !='' and title !=null">
				and title like '%${title}%'
			</if>
			<if test="content !='' and content !=null">
				and content like '%${content}%'
			</if>
			<if test="sender !='' and sender !=null">
				and sender = #{sender}
			</if>
			<if test="senderId !='' and senderId !=null">
				and sender_id = #{senderId}
			</if>
			<if test="receiver !='' and receiver !=null">
				and receiver like '%${receiver}%'
			</if>
			<if test="tryTimes != 0">
				and try_times &lt; #{tryTimes}
			</if>
			<if test="lastSentTime !='' and lastSentTime !=null">
				and (last_sent_time is null or last_sent_time &lt; #{lastSentTime})
			</if>
			<if test="statuss !=null and statuss.size()>0">
				and status in 
			<foreach collection="statuss" item="item" open="(" separator="," close=")">
				#{item}
			</foreach>
			</if>
		</where>
	</select>
	
	<insert id="insertSMSLog" parameterType="com.mysoft.b2b.bizsupport.api.sms.SMSLog">
		insert into b2b_support.bizp_sms_log(
			sms_log_id,
			message_batch,
			message_type_code,
			title,
			content,
			attachments,
			sender,
			sender_id,
			receiver,
			status,
			sms_id,
			call_in,
			remark,
			try_times,
			created_time,
			last_sent_time
		)
		values(
			#{smsLogId},
			#{messageBatch},
			#{messageTypeCode},
			#{title},
			#{content},
			#{attachments},
			#{sender},
			#{senderId},
			#{receiver},
			#{status},
			#{smsId},
			#{callIn},
			#{remark},
			#{tryTimes},
			#{createdTime},
			#{lastSentTime}
		)
	</insert>
	
	<update id="updateSMSLog" parameterType="com.mysoft.b2b.bizsupport.api.sms.SMSLog">
		update b2b_support.bizp_sms_log set
			sms_log_id =#{smsLogId},
			message_batch =#{messageBatch},
			message_type_code =#{messageTypeCode},
			title=#{title},
			content=#{content},
			attachments=#{attachments},
			sender=#{sender},
			sender_id=#{senderId},
			receiver=#{receiver},
			status=#{status},
			sms_id=#{smsId},
			call_in=#{callIn},
			remark=#{remark},
			try_times=#{tryTimes},
			created_time=#{createdTime},
			last_sent_time=#{lastSentTime}
		<where>
			<if test="smsLogId !='' and smsLogId !=null">
				and sms_log_id =#{smsLogId}
			</if>
			<if test="smsId !='' and smsId !=null">
				and sms_id =#{smsId}
			</if>
		</where>
	</update>
	
	<delete id="deleteSMSLog" parameterType="java.lang.String">
		delete from b2b_support.bizp_sms_log where sms_log_id =#{0}
	</delete>
	
	<select id="getSMSLog" parameterType="java.lang.String"  resultType="com.mysoft.b2b.bizsupport.api.sms.SMSLog">
		select 
			sms_log_id as smsLogId,
			message_batch as messageBatch,
			message_type_code as messageTypeCode,
			title,
			content,
			attachments,
			sender,
			sender_id as senderId,
			receiver,
			status,
			sms_id as smsId,
			call_in as callIn,
			remark,
			try_times as tryTimes,
			created_time as createdTime,
			last_sent_time as lastSentTime
		from b2b_support.bizp_sms_log
		where sms_log_id=#{0}
	</select>
	
	<select id="getSMSLogList" resultType="com.mysoft.b2b.bizsupport.api.sms.SMSLog" parameterType="com.mysoft.b2b.bizsupport.api.sms.SMSLogCriteria">
		select 
			sms_log_id as smsLogId,
			message_batch as messageBatch,
			message_type_code as messageTypeCode,
			title,
			content,
			attachments,
			sender,
			sender_id as senderId,
			receiver,
			status,
			sms_id as smsId,
			call_in as callIn,
			remark,
			try_times as tryTimes,
			created_time as createdTime,
			last_sent_time as lastSentTime
		from b2b_support.bizp_sms_log
		<where>
			<if test="messageTypeCode != null and messageTypeCode != '' ">
			 AND  message_type_code = #{messageTypeCode}
			</if>
			<if test="messageBatch != null and messageBatch != '' ">
			 AND  message_batch = #{messageBatch}
			</if>
			<if test="title !='' and title !=null">
				and title like '%${title}%'
			</if>
			<if test="content !='' and content !=null">
				and content like '%${content}%'
			</if>
			<if test="lastSentTime !='' and lastSentTime !=null">
				and last_sent_time &gt; #{lastSentTime}
			</if>
			<if test="sender !='' and sender !=null">
				and sender = #{sender}
			</if>
			<if test="senderId !='' and senderId !=null">
				and sender_id = #{senderId}
			</if>
			<if test="receiver !='' and receiver !=null">
				and receiver like '%${receiver}%'
			</if>
			<if test="currentDateTime != null">
				and DATE(last_sent_time) = DATE(#{currentDateTime})
			</if>
		</where>
		limit #{offset},#{pageSize}
	</select>
	
	<select id="getSMSLogTotal" resultType="java.lang.Integer" parameterType="com.mysoft.b2b.bizsupport.api.sms.SMSLogCriteria">
		select 
			count(1)
		from b2b_support.bizp_sms_log
		<where>
			<if test="messageTypeCode != null and messageTypeCode != '' ">
			 AND  message_type_code = #{messageTypeCode}
			</if>
			<if test="messageBatch != null and messageBatch != '' ">
			 AND  message_batch = #{messageBatch}
			</if>
			<if test="title !='' and title !=null">
				and title like '%${title}%'
			</if>
			<if test="content !='' and content !=null">
				and content like '%${content}%'
			</if>
			<if test="lastSentTime !='' and lastSentTime !=null">
				and last_sent_time &gt; #{lastSentTime}
			</if>
			<if test="sender !='' and sender !=null">
				and sender = #{sender}
			</if>
			<if test="senderId !='' and senderId !=null">
				and sender_id = #{senderId}
			</if>
			<if test="receiver !='' and receiver !=null">
				and receiver like '%${receiver}%'
			</if>
			<if test="currentDateTime != null">
				and DATE(last_sent_time) = DATE(#{currentDateTime})
			</if>
		</where>
	</select>
	
	<!-- 根据退邮件或手机号码判断是否已经退订 -->
	<select id="isUnsubscribled" parameterType="string" resultType="int">
		SELECT 
		    count(*)
		FROM
		    b2b_operation.op_rejected_message
		WHERE
		    status = 1
		AND contact_details = #{0}
	</select>
	
	<!-- 新增退订表数据 -->
	<insert id="dealSMSReply" parameterType="com.mysoft.b2b.bizsupport.api.sms.SMSReply">
		INSERT INTO `b2b_operation`.`op_rejected_message` (
		`rejected_push_message_id`,
		`contact_details`,
		`contact_type`,
		`company_id`,
		`user_id`,
		`status`,
		`created_time`
		)
		VALUES
		(
			#{id},
			#{mobile},
			2,
			#{companyId},
			#{userId},
			1,
			#{createdTime}
		);
	</insert>
	
	<!-- 获取供应商相关信息 -->
	<select id="getSupplierInfo" parameterType="string" resultType="hashmap">
		SELECT
			a.user_id AS userId,
			a.company_id AS companyId
		FROM
			b2b_user_business.business_card_record a
		INNER JOIN b2b_user.uuc_user u ON u.user_id = a.user_id
									  AND u.status = 2
		INNER JOIN b2b_user.uuc_user_identity ui ON ui.company_id = a.company_id
												AND ui.user_id = a.user_id
		WHERE
			a.mobile = #{mobile}
	</select>
	
	<!-- 获取供应商相关信息 -->
	<select id="getSupplierInfo2" parameterType="string" resultType="hashmap">
		SELECT
			a.user_id AS userId,
			a.company_id AS companyId,
			b.company_mobile
		FROM
			b2b_user.uuc_user_identity a
		INNER JOIN b2b_company.uuc_supplier_basic b ON b.supplier_id = a.company_id
		AND b.state = 2
		AND b.status = 2
		WHERE
			b.company_mobile =  #{mobile}
		LIMIT 0, 1
	</select>
	

	
</mapper>